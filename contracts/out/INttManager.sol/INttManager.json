{"abi":[{"type":"function","name":"attestationReceived","inputs":[{"name":"sourceChainId","type":"uint16","internalType":"uint16"},{"name":"sourceNttManagerAddress","type":"bytes32","internalType":"bytes32"},{"name":"payload","type":"tuple","internalType":"struct TransceiverStructs.NttManagerMessage","components":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"sender","type":"bytes32","internalType":"bytes32"},{"name":"payload","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"cancelOutboundQueuedTransfer","inputs":[{"name":"queueSequence","type":"uint64","internalType":"uint64"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"chainId","inputs":[],"outputs":[{"name":"","type":"uint16","internalType":"uint16"}],"stateMutability":"view"},{"type":"function","name":"completeInboundQueuedTransfer","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"completeOutboundQueuedTransfer","inputs":[{"name":"queueSequence","type":"uint64","internalType":"uint64"}],"outputs":[{"name":"msgSequence","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"executeMsg","inputs":[{"name":"sourceChainId","type":"uint16","internalType":"uint16"},{"name":"sourceNttManagerAddress","type":"bytes32","internalType":"bytes32"},{"name":"message","type":"tuple","internalType":"struct TransceiverStructs.NttManagerMessage","components":[{"name":"id","type":"bytes32","internalType":"bytes32"},{"name":"sender","type":"bytes32","internalType":"bytes32"},{"name":"payload","type":"bytes","internalType":"bytes"}]}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"getMode","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"getPeer","inputs":[{"name":"chainId_","type":"uint16","internalType":"uint16"}],"outputs":[{"name":"","type":"tuple","internalType":"struct INttManager.NttManagerPeer","components":[{"name":"peerAddress","type":"bytes32","internalType":"bytes32"},{"name":"tokenDecimals","type":"uint8","internalType":"uint8"}]}],"stateMutability":"view"},{"type":"function","name":"getThreshold","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"isMessageApproved","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"isMessageExecuted","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"messageAttestations","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"count","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"nextMessageSequence","inputs":[],"outputs":[{"name":"","type":"uint64","internalType":"uint64"}],"stateMutability":"view"},{"type":"function","name":"pause","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"quoteDeliveryPrice","inputs":[{"name":"recipientChain","type":"uint16","internalType":"uint16"},{"name":"transceiverInstructions","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"},{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"removeTransceiver","inputs":[{"name":"transceiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setInboundLimit","inputs":[{"name":"limit","type":"uint256","internalType":"uint256"},{"name":"chainId","type":"uint16","internalType":"uint16"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setOutboundLimit","inputs":[{"name":"limit","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setPeer","inputs":[{"name":"peerChainId","type":"uint16","internalType":"uint16"},{"name":"peerContract","type":"bytes32","internalType":"bytes32"},{"name":"decimals","type":"uint8","internalType":"uint8"},{"name":"inboundLimit","type":"uint256","internalType":"uint256"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setThreshold","inputs":[{"name":"threshold","type":"uint8","internalType":"uint8"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"setTransceiver","inputs":[{"name":"transceiver","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"token","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"tokenDecimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"transceiverAttestedToMessage","inputs":[{"name":"digest","type":"bytes32","internalType":"bytes32"},{"name":"index","type":"uint8","internalType":"uint8"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"recipientChain","type":"uint16","internalType":"uint16"},{"name":"recipient","type":"bytes32","internalType":"bytes32"}],"outputs":[{"name":"msgId","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"transfer","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"recipientChain","type":"uint16","internalType":"uint16"},{"name":"recipient","type":"bytes32","internalType":"bytes32"},{"name":"refundAddress","type":"bytes32","internalType":"bytes32"},{"name":"shouldQueue","type":"bool","internalType":"bool"},{"name":"encodedInstructions","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"msgId","type":"uint64","internalType":"uint64"}],"stateMutability":"payable"},{"type":"function","name":"upgrade","inputs":[{"name":"newImplementation","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"event","name":"MessageAlreadyExecuted","inputs":[{"name":"sourceNttManager","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"msgHash","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"MessageAttestedTo","inputs":[{"name":"digest","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"transceiver","type":"address","indexed":false,"internalType":"address"},{"name":"index","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"OutboundTransferCancelled","inputs":[{"name":"sequence","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"recipient","type":"address","indexed":false,"internalType":"address"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"PeerUpdated","inputs":[{"name":"chainId_","type":"uint16","indexed":true,"internalType":"uint16"},{"name":"oldPeerContract","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"oldPeerDecimals","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"peerContract","type":"bytes32","indexed":false,"internalType":"bytes32"},{"name":"peerDecimals","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"ThresholdChanged","inputs":[{"name":"oldThreshold","type":"uint8","indexed":false,"internalType":"uint8"},{"name":"threshold","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"TransceiverAdded","inputs":[{"name":"transceiver","type":"address","indexed":false,"internalType":"address"},{"name":"transceiversNum","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"threshold","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"TransceiverRemoved","inputs":[{"name":"transceiver","type":"address","indexed":false,"internalType":"address"},{"name":"threshold","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false},{"type":"event","name":"TransferRedeemed","inputs":[{"name":"digest","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"event","name":"TransferSent","inputs":[{"name":"recipient","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"refundAddress","type":"bytes32","indexed":true,"internalType":"bytes32"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"fee","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"recipientChain","type":"uint16","indexed":false,"internalType":"uint16"},{"name":"msgSequence","type":"uint64","indexed":false,"internalType":"uint64"}],"anonymous":false},{"type":"event","name":"TransferSent","inputs":[{"name":"digest","type":"bytes32","indexed":true,"internalType":"bytes32"}],"anonymous":false},{"type":"error","name":"BurnAmountDifferentThanBalanceDiff","inputs":[{"name":"burnAmount","type":"uint256","internalType":"uint256"},{"name":"balanceDiff","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"CancellerNotSender","inputs":[{"name":"canceller","type":"address","internalType":"address"},{"name":"sender","type":"address","internalType":"address"}]},{"type":"error","name":"DeliveryPaymentTooLow","inputs":[{"name":"requiredPayment","type":"uint256","internalType":"uint256"},{"name":"providedPayment","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"InvalidMode","inputs":[{"name":"mode","type":"uint8","internalType":"uint8"}]},{"type":"error","name":"InvalidPeer","inputs":[{"name":"chainId","type":"uint16","internalType":"uint16"},{"name":"peerAddress","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"InvalidPeerChainIdZero","inputs":[]},{"type":"error","name":"InvalidPeerDecimals","inputs":[]},{"type":"error","name":"InvalidPeerSameChainId","inputs":[]},{"type":"error","name":"InvalidPeerZeroAddress","inputs":[]},{"type":"error","name":"InvalidRecipient","inputs":[]},{"type":"error","name":"InvalidRefundAddress","inputs":[]},{"type":"error","name":"InvalidTargetChain","inputs":[{"name":"targetChain","type":"uint16","internalType":"uint16"},{"name":"thisChain","type":"uint16","internalType":"uint16"}]},{"type":"error","name":"MessageNotApproved","inputs":[{"name":"msgHash","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"NoEnabledTransceivers","inputs":[]},{"type":"error","name":"NotImplemented","inputs":[]},{"type":"error","name":"PeerNotRegistered","inputs":[{"name":"chainId","type":"uint16","internalType":"uint16"}]},{"type":"error","name":"RefundFailed","inputs":[{"name":"refundAmount","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"RetrievedIncorrectRegisteredTransceivers","inputs":[{"name":"retrieved","type":"uint256","internalType":"uint256"},{"name":"registered","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"StaticcallFailed","inputs":[]},{"type":"error","name":"ThresholdTooHigh","inputs":[{"name":"threshold","type":"uint256","internalType":"uint256"},{"name":"transceivers","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"TransceiverAlreadyAttestedToMessage","inputs":[{"name":"nttManagerMessageHash","type":"bytes32","internalType":"bytes32"}]},{"type":"error","name":"TransferAmountHasDust","inputs":[{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"dust","type":"uint256","internalType":"uint256"}]},{"type":"error","name":"UnexpectedDeployer","inputs":[{"name":"expectedOwner","type":"address","internalType":"address"},{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"UnexpectedMsgValue","inputs":[]},{"type":"error","name":"ZeroAmount","inputs":[]},{"type":"error","name":"ZeroThreshold","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"attestationReceived(uint16,bytes32,(bytes32,bytes32,bytes))":"9d782454","cancelOutboundQueuedTransfer(uint64)":"f7514fbc","chainId()":"9a8a0592","completeInboundQueuedTransfer(bytes32)":"8413bcba","completeOutboundQueuedTransfer(uint64)":"97c35146","executeMsg(uint16,bytes32,(bytes32,bytes32,bytes))":"da4856a1","getMode()":"4b4fd03b","getPeer(uint16)":"c128d170","getThreshold()":"e75235b8","isMessageApproved(bytes32)":"0677df54","isMessageExecuted(bytes32)":"396c16b7","messageAttestations(bytes32)":"89c619dd","nextMessageSequence()":"23d75e31","pause()":"8456cb59","quoteDeliveryPrice(uint16,bytes)":"9057412d","removeTransceiver(address)":"9f86029c","setInboundLimit(uint256,uint16)":"186ce612","setOutboundLimit(uint256)":"19017175","setPeer(uint16,bytes32,uint8,uint256)":"7c918634","setThreshold(uint8)":"e5a98603","setTransceiver(address)":"203e4a9b","token()":"fc0c546a","tokenDecimals()":"3b97e856","transceiverAttestedToMessage(bytes32,uint8)":"8e3ba8c9","transfer(uint256,uint16,bytes32)":"961b94d0","transfer(uint256,uint16,bytes32,bytes32,bool,bytes)":"b293f97f","upgrade(address)":"0900f010"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"burnAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceDiff\",\"type\":\"uint256\"}],\"name\":\"BurnAmountDifferentThanBalanceDiff\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"canceller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"CancellerNotSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requiredPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"providedPayment\",\"type\":\"uint256\"}],\"name\":\"DeliveryPaymentTooLow\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"mode\",\"type\":\"uint8\"}],\"name\":\"InvalidMode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"peerAddress\",\"type\":\"bytes32\"}],\"name\":\"InvalidPeer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPeerChainIdZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPeerDecimals\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPeerSameChainId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPeerZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRecipient\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidRefundAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"targetChain\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"thisChain\",\"type\":\"uint16\"}],\"name\":\"InvalidTargetChain\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"MessageNotApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoEnabledTransceivers\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotImplemented\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"PeerNotRegistered\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"}],\"name\":\"RefundFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"retrieved\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"registered\",\"type\":\"uint256\"}],\"name\":\"RetrievedIncorrectRegisteredTransceivers\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StaticcallFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"transceivers\",\"type\":\"uint256\"}],\"name\":\"ThresholdTooHigh\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"nttManagerMessageHash\",\"type\":\"bytes32\"}],\"name\":\"TransceiverAlreadyAttestedToMessage\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dust\",\"type\":\"uint256\"}],\"name\":\"TransferAmountHasDust\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"expectedOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"UnexpectedDeployer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnexpectedMsgValue\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroThreshold\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"sourceNttManager\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"MessageAlreadyExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"transceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"MessageAttestedTo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sequence\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OutboundTransferCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"oldPeerContract\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"oldPeerDecimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"peerContract\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"peerDecimals\",\"type\":\"uint8\"}],\"name\":\"PeerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"oldThreshold\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"ThresholdChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"transceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transceiversNum\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"TransceiverAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"transceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"TransceiverRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"TransferRedeemed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"msgSequence\",\"type\":\"uint64\"}],\"name\":\"TransferSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"TransferSent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceNttManagerAddress\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct TransceiverStructs.NttManagerMessage\",\"name\":\"payload\",\"type\":\"tuple\"}],\"name\":\"attestationReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"queueSequence\",\"type\":\"uint64\"}],\"name\":\"cancelOutboundQueuedTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"chainId\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"completeInboundQueuedTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"queueSequence\",\"type\":\"uint64\"}],\"name\":\"completeOutboundQueuedTransfer\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"msgSequence\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"sourceChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"sourceNttManagerAddress\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"sender\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"payload\",\"type\":\"bytes\"}],\"internalType\":\"struct TransceiverStructs.NttManagerMessage\",\"name\":\"message\",\"type\":\"tuple\"}],\"name\":\"executeMsg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMode\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"chainId_\",\"type\":\"uint16\"}],\"name\":\"getPeer\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"peerAddress\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"tokenDecimals\",\"type\":\"uint8\"}],\"internalType\":\"struct INttManager.NttManagerPeer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getThreshold\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"isMessageApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"isMessageExecuted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"}],\"name\":\"messageAttestations\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"count\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextMessageSequence\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"transceiverInstructions\",\"type\":\"bytes\"}],\"name\":\"quoteDeliveryPrice\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"transceiver\",\"type\":\"address\"}],\"name\":\"removeTransceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"chainId\",\"type\":\"uint16\"}],\"name\":\"setInboundLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"}],\"name\":\"setOutboundLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"peerChainId\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"peerContract\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"inboundLimit\",\"type\":\"uint256\"}],\"name\":\"setPeer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"threshold\",\"type\":\"uint8\"}],\"name\":\"setThreshold\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"transceiver\",\"type\":\"address\"}],\"name\":\"setTransceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"digest\",\"type\":\"bytes32\"},{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"transceiverAttestedToMessage\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"msgId\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"recipientChain\",\"type\":\"uint16\"},{\"internalType\":\"bytes32\",\"name\":\"recipient\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"refundAddress\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"shouldQueue\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"encodedInstructions\",\"type\":\"bytes\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"msgId\",\"type\":\"uint64\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BurnAmountDifferentThanBalanceDiff(uint256,uint256)\":[{\"details\":\"Selector 0x02156a8f.\",\"params\":{\"balanceDiff\":\"The balance after burning.\",\"burnAmount\":\"The amount burned.\"}}],\"CancellerNotSender(address,address)\":[{\"details\":\"Selector 0xceb40a85.\",\"params\":{\"canceller\":\"The address trying to cancel the transfer.\",\"sender\":\"The original sender that initiated the transfer that was queued.\"}}],\"DeliveryPaymentTooLow(uint256,uint256)\":[{\"params\":{\"providedPayment\":\"The provided payment.\",\"requiredPayment\":\"The required payment.\"}}],\"InvalidMode(uint8)\":[{\"details\":\"Selector 0x66001a89\",\"params\":{\"mode\":\"The mode.\"}}],\"InvalidPeer(uint16,bytes32)\":[{\"params\":{\"chainId\":\"ChainId of the source chain.\",\"peerAddress\":\"Address of the peer nttManager contract.\"}}],\"InvalidPeerSameChainId()\":[{\"details\":\"Selector 0x20371f2a.\"}],\"InvalidRecipient()\":[{\"details\":\"Selector 0x9c8d2cd2.\"}],\"InvalidRefundAddress()\":[{\"details\":\"Selector 0xe2fe2726.\"}],\"InvalidTargetChain(uint16,uint16)\":[{\"details\":\"Selector 0x3dcb204a.\",\"params\":{\"targetChain\":\"The target chain.\",\"thisChain\":\"The current chain.\"}}],\"MessageNotApproved(bytes32)\":[{\"details\":\"Selector 0x451c4fb0.\",\"params\":{\"msgHash\":\"The hash of the message.\"}}],\"NoEnabledTransceivers()\":[{\"details\":\"Selector 0x69cf632a\"}],\"PeerNotRegistered(uint16)\":[{\"details\":\"Selector 0x3af256bc.\",\"params\":{\"chainId\":\"The target Wormhole chain id\"}}],\"RefundFailed(uint256)\":[{\"details\":\"Selector 0x2ca23714.\",\"params\":{\"refundAmount\":\"The refund amount.\"}}],\"StaticcallFailed()\":[{\"details\":\"Selector 0x1222cd83\"}],\"ThresholdTooHigh(uint256,uint256)\":[{\"params\":{\"threshold\":\"The threshold.\",\"transceivers\":\"The number of transceivers.\"}}],\"TransceiverAlreadyAttestedToMessage(bytes32)\":[{\"details\":\"Selector 0x2113894.\",\"params\":{\"nttManagerMessageHash\":\"The hash of the message.\"}}],\"TransferAmountHasDust(uint256,uint256)\":[{\"details\":\"Selector 0x71f0634aThis is a security measure to prevent users from losing funds.      This is the result of trimming the amount and then untrimming it.\",\"params\":{\"amount\":\"The amount to transfer.\"}}],\"UnexpectedMsgValue()\":[{\"details\":\"Selector 0xbd28e889.\"}],\"ZeroAmount()\":[{\"details\":\"Selector 0x9993626a.\"}]},\"events\":{\"MessageAlreadyExecuted(bytes32,bytes32)\":{\"details\":\"Topic0      0x4069dff8c9df7e38d2867c0910bd96fd61787695e5380281148c04932d02bef2.\",\"params\":{\"msgHash\":\"The keccak-256 hash of the message.\",\"sourceNttManager\":\"The address of the source nttManager.\"}},\"MessageAttestedTo(bytes32,address,uint8)\":{\"details\":\"Topic0      0x35a2101eaac94b493e0dfca061f9a7f087913fde8678e7cde0aca9897edba0e5.\",\"params\":{\"digest\":\"The digest of the message.\",\"index\":\"The index of the transceiver in the bitmap.\",\"transceiver\":\"The address of the transceiver.\"}},\"OutboundTransferCancelled(uint256,address,uint256)\":{\"details\":\"Topic0      0xf80e572ae1b63e2449629b6c7d783add85c36473926f216077f17ee002bcfd07.\",\"params\":{\"amount\":\"The amount of the transfer being cancelled\",\"recipient\":\"The canceller and recipient of the funds\",\"sequence\":\"The sequence number being cancelled\"}},\"PeerUpdated(uint16,bytes32,uint8,bytes32,uint8)\":{\"details\":\"Topic0      0x1456404e7f41f35c3daac941bb50bad417a66275c3040061b4287d787719599d.\",\"params\":{\"chainId_\":\"The chain ID of the peer contract.\",\"oldPeerContract\":\"The old peer contract address.\",\"oldPeerDecimals\":\"The old peer contract decimals.\",\"peerContract\":\"The new peer contract address.\",\"peerDecimals\":\"The new peer contract decimals.\"}},\"ThresholdChanged(uint8,uint8)\":{\"details\":\"Topic0      0x2a855b929b9a53c6fb5b5ed248b27e502b709c088e036a5aa17620c8fc5085a9.\",\"params\":{\"oldThreshold\":\"The old threshold.\",\"threshold\":\"The new threshold.\"}},\"TransceiverAdded(address,uint256,uint8)\":{\"details\":\"Topic0      0xf05962b5774c658e85ed80c91a75af9d66d2af2253dda480f90bce78aff5eda5.\",\"params\":{\"threshold\":\"The current threshold of transceivers.\",\"transceiver\":\"The address of the transceiver.\",\"transceiversNum\":\"The current number of transceivers.\"}},\"TransceiverRemoved(address,uint8)\":{\"details\":\"Topic0     0x697a3853515b88013ad432f29f53d406debc9509ed6d9313dcfe115250fcd18f.\",\"params\":{\"threshold\":\"The current threshold of transceivers.\",\"transceiver\":\"The address of the transceiver.\"}},\"TransferRedeemed(bytes32)\":{\"details\":\"Topic0      0x504e6efe18ab9eed10dc6501a417f5b12a2f7f2b1593aed9b89f9bce3cf29a91.\",\"params\":{\"digest\":\"The digest of the message.\"}},\"TransferSent(bytes32)\":{\"details\":\"Topic0      0x3e6ae56314c6da8b461d872f41c6d0bb69317b9d0232805aaccfa45df1a16fa0.\",\"params\":{\"digest\":\"The digest of the message.\"}},\"TransferSent(bytes32,bytes32,uint256,uint256,uint16,uint64)\":{\"details\":\"Topic0      0xe54e51e42099622516fa3b48e9733581c9dbdcb771cafb093f745a0532a35982.\",\"params\":{\"amount\":\"The amount transferred.\",\"fee\":\"The amount of ether sent along with the tx to cover the delivery fee.\",\"msgSequence\":\"The unique sequence ID of the message.\",\"recipient\":\"The recipient of the message.\",\"recipientChain\":\"The chain ID of the recipient.\",\"refundAddress\":\"The address on the destination chain to which the                      refund of unused gas will be paid\"}}},\"kind\":\"dev\",\"methods\":{\"attestationReceived(uint16,bytes32,(bytes32,bytes32,bytes))\":{\"details\":\"This function enforces attestation threshold and replay logic for messages. Once all      validations are complete, this function calls `executeMsg` to execute the command specified      by the message.\",\"params\":{\"payload\":\"The VAA payload.\",\"sourceChainId\":\"The Wormhole chain id of the sender.\",\"sourceNttManagerAddress\":\"The address of the sender's NTT Manager contract.\"}},\"cancelOutboundQueuedTransfer(uint64)\":{\"details\":\"This method is called by the client to cancel an outbound transfer that's been queued.\",\"params\":{\"queueSequence\":\"The sequence of the message in the queue.\"}},\"completeInboundQueuedTransfer(bytes32)\":{\"params\":{\"digest\":\"The digest of the message to complete.\"}},\"completeOutboundQueuedTransfer(uint64)\":{\"details\":\"This method is called by the client to complete an outbound transfer that's been queued.\",\"params\":{\"queueSequence\":\"The sequence of the message in the queue.\"},\"returns\":{\"msgSequence\":\"The sequence of the message.\"}},\"executeMsg(uint16,bytes32,(bytes32,bytes32,bytes))\":{\"details\":\"This function is exposed as a fallback for when an `Transceiver` is deregistered      when a message is in flight.\",\"params\":{\"message\":\"The message to execute.\",\"sourceChainId\":\"The Wormhole chain id of the sender.\",\"sourceNttManagerAddress\":\"The address of the sender's nttManager contract.\"}},\"getMode()\":{\"returns\":{\"_0\":\"mode A uint8 corresponding to the mode\"}},\"getPeer(uint16)\":{\"params\":{\"chainId_\":\"Wormhole chain ID.\"}},\"isMessageApproved(bytes32)\":{\"params\":{\"digest\":\"The digest of the message.\"},\"returns\":{\"_0\":\"- Boolean indicating if message has been approved.\"}},\"isMessageExecuted(bytes32)\":{\"params\":{\"digest\":\"The digest of the message.\"},\"returns\":{\"_0\":\"- Boolean indicating if message has been executed.\"}},\"messageAttestations(bytes32)\":{\"params\":{\"digest\":\"The digest of the message.\"},\"returns\":{\"count\":\"The number of attestations received for the given message digest\"}},\"quoteDeliveryPrice(uint16,bytes)\":{\"params\":{\"recipientChain\":\"The Wormhole chain ID of the transfer destination.\",\"transceiverInstructions\":\"The transceiver specific instructions for quoting and sending\"},\"returns\":{\"_0\":\"- The delivery prices associated with each enabled endpoint and the total price.\"}},\"removeTransceiver(address)\":{\"details\":\"This method can only be executed by the `owner`.\",\"params\":{\"transceiver\":\"The address of the transceiver.\"}},\"setInboundLimit(uint256,uint16)\":{\"details\":\"This method can only be executed by the `owner`.\",\"params\":{\"chainId\":\"The Wormhole chain ID to set the limit for.\",\"limit\":\"The new limit. This is formatted in the normal              token representation. e.g. a limit of 100 for a token with 6 decimals = 100_000_000\"}},\"setOutboundLimit(uint256)\":{\"details\":\"This method can only be executed by the `owner`.\",\"params\":{\"limit\":\"The new outbound limit. This is formatted in the normal              token representation. e.g. a limit of 100 for a token with 6 decimals = 100_000_000\"}},\"setPeer(uint16,bytes32,uint8,uint256)\":{\"details\":\"The nttManager that executes the message sets the source nttManager as the peer.\",\"params\":{\"decimals\":\"The number of decimals of the token on the peer chain.\",\"inboundLimit\":\"The inbound rate limit for the peer chain id. This is formatted in the normal                     token representation. e.g. a limit of 100 for a token with 6 decimals = 100_000_000\",\"peerChainId\":\"The Wormhole chain ID of the peer.\",\"peerContract\":\"The address of the peer nttManager contract.\"}},\"setThreshold(uint8)\":{\"details\":\"This method can only be executed by the `owner`.\",\"params\":{\"threshold\":\"The new threshold (number of attestations).\"}},\"setTransceiver(address)\":{\"details\":\"This method can only be executed by the `owner`.\",\"params\":{\"transceiver\":\"The address of the transceiver.\"}},\"tokenDecimals()\":{\"returns\":{\"_0\":\"decimals The number of decimals of the token.\"}},\"transceiverAttestedToMessage(bytes32,uint8)\":{\"params\":{\"digest\":\"The digest of the message.\",\"index\":\"The index of the transceiver\"},\"returns\":{\"_0\":\"- Boolean indicating whether the transceiver at index `index` attested to a message digest\"}},\"transfer(uint256,uint16,bytes32)\":{\"params\":{\"amount\":\"The amount to transfer.\",\"recipient\":\"The recipient address.\",\"recipientChain\":\"The Wormhole chain ID for the destination.\"},\"returns\":{\"msgId\":\"The resulting message ID of the transfer\"}},\"transfer(uint256,uint16,bytes32,bytes32,bool,bytes)\":{\"details\":\"Transfers are queued if the outbound limit is hit and must be completed by the client.\",\"params\":{\"amount\":\"The amount to transfer.\",\"encodedInstructions\":\"Additional instructions to be forwarded to the recipient chain.\",\"recipient\":\"The recipient address.\",\"recipientChain\":\"The Wormhole chain ID for the destination.\",\"refundAddress\":\"The address to which a refund for unussed gas is issued on the recipient chain.\",\"shouldQueue\":\"Whether the transfer should be queued if the outbound limit is hit.\"},\"returns\":{\"msgId\":\"The resulting message ID of the transfer\"}},\"upgrade(address)\":{\"details\":\"This is upgraded via a proxy, and can only be executed by the `owner`.\",\"params\":{\"newImplementation\":\"The address of the new implementation.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"BurnAmountDifferentThanBalanceDiff(uint256,uint256)\":[{\"notice\":\"Error when the amount burned is different than the balance difference,         since NTT does not support burn fees.\"}],\"CancellerNotSender(address,address)\":[{\"notice\":\"Error when someone other than the original sender tries to cancel a queued outbound transfer.\"}],\"DeliveryPaymentTooLow(uint256,uint256)\":[{\"notice\":\"payment for a transfer is too low.\"}],\"InvalidMode(uint8)\":[{\"notice\":\"The mode is invalid. It is neither in LOCKING or BURNING mode.\"}],\"InvalidPeer(uint16,bytes32)\":[{\"notice\":\"Peer for the chain does not match the configuration.\"}],\"InvalidPeerChainIdZero()\":[{\"notice\":\"Peer chain ID cannot be zero.\"}],\"InvalidPeerDecimals()\":[{\"notice\":\"Peer cannot have zero decimals.\"}],\"InvalidPeerSameChainId()\":[{\"notice\":\"Peer cannot be on the same chain\"}],\"InvalidPeerZeroAddress()\":[{\"notice\":\"Peer cannot be the zero address.\"}],\"InvalidRecipient()\":[{\"notice\":\"Error when the recipient is invalid.\"}],\"InvalidRefundAddress()\":[{\"notice\":\"Error when the recipient is invalid.\"}],\"InvalidTargetChain(uint16,uint16)\":[{\"notice\":\"Error when trying to execute a message on an unintended target chain.\"}],\"MessageNotApproved(bytes32)\":[{\"notice\":\"Error when the message is not approved.\"}],\"NoEnabledTransceivers()\":[{\"notice\":\"There are no transceivers enabled with the Manager\"}],\"NotImplemented()\":[{\"notice\":\"Feature is not implemented.\"}],\"PeerNotRegistered(uint16)\":[{\"notice\":\"Error when the manager doesn't have a peer registered for the destination chain\"}],\"RefundFailed(uint256)\":[{\"notice\":\"Error when the refund to the sender fails.\"}],\"StaticcallFailed()\":[{\"notice\":\"Staticcall reverted\"}],\"ThresholdTooHigh(uint256,uint256)\":[{\"notice\":\"The threshold for transceiver attestations is too high.\"}],\"TransceiverAlreadyAttestedToMessage(bytes32)\":[{\"notice\":\"Error when the tranceiver already attested to the message.         To ensure the client does not continue to initiate calls to the attestationReceived function.\"}],\"TransferAmountHasDust(uint256,uint256)\":[{\"notice\":\"The transfer has some dust.\"}],\"UnexpectedDeployer(address,address)\":[{\"notice\":\"The caller is not the deployer.\"}],\"UnexpectedMsgValue()\":[{\"notice\":\"An unexpected msg.value was passed with the call\"}],\"ZeroAmount()\":[{\"notice\":\"Error when the transfer amount is zero.\"}],\"ZeroThreshold()\":[{\"notice\":\"The number of thresholds should not be zero.\"}]},\"events\":{\"MessageAlreadyExecuted(bytes32,bytes32)\":{\"notice\":\"Emitted when a message has already been executed to         notify client of against retries.\"},\"MessageAttestedTo(bytes32,address,uint8)\":{\"notice\":\"Emitted when a message has been attested to.\"},\"OutboundTransferCancelled(uint256,address,uint256)\":{\"notice\":\"Emitted when an outbound transfer has been cancelled\"},\"PeerUpdated(uint16,bytes32,uint8,bytes32,uint8)\":{\"notice\":\"Emitted when the peer contract is updated.\"},\"ThresholdChanged(uint8,uint8)\":{\"notice\":\"Emmitted when the threshold required transceivers is changed.\"},\"TransceiverAdded(address,uint256,uint8)\":{\"notice\":\"Emitted when an transceiver is removed from the nttManager.\"},\"TransceiverRemoved(address,uint8)\":{\"notice\":\"Emitted when an transceiver is removed from the nttManager.\"},\"TransferRedeemed(bytes32)\":{\"notice\":\"Emitted when a transfer has been redeemed         (either minted or unlocked on the recipient chain).\"},\"TransferSent(bytes32)\":{\"notice\":\"Emitted when a message is sent from the nttManager.\"},\"TransferSent(bytes32,bytes32,uint256,uint256,uint16,uint64)\":{\"notice\":\"Emitted when a message is sent from the nttManager.\"}},\"kind\":\"user\",\"methods\":{\"attestationReceived(uint16,bytes32,(bytes32,bytes32,bytes))\":{\"notice\":\"Called by an Endpoint contract to deliver a verified attestation.\"},\"cancelOutboundQueuedTransfer(uint64)\":{\"notice\":\"Cancels an outbound transfer that's been queued.\"},\"chainId()\":{\"notice\":\"Returns the chain ID.\"},\"completeInboundQueuedTransfer(bytes32)\":{\"notice\":\"Complete an inbound queued transfer.\"},\"completeOutboundQueuedTransfer(uint64)\":{\"notice\":\"Complete an outbound transfer that's been queued.\"},\"executeMsg(uint16,bytes32,(bytes32,bytes32,bytes))\":{\"notice\":\"Called after a message has been sufficiently verified to execute         the command in the message. This function will decode the payload         as an NttManagerMessage to extract the sequence, msgType, and other parameters.\"},\"getMode()\":{\"notice\":\"Returns the mode (locking or burning) of the NttManager.\"},\"getPeer(uint16)\":{\"notice\":\"Returns registered peer contract for a given chain.\"},\"getThreshold()\":{\"notice\":\"Returns the number of Transceivers that must attest to a msgId for it to be considered valid and acted upon.\"},\"isMessageApproved(bytes32)\":{\"notice\":\"Checks if a message has been approved. The message should have at least the minimum threshold of attestations from distinct endpoints.\"},\"isMessageExecuted(bytes32)\":{\"notice\":\"Checks if a message has been executed.\"},\"messageAttestations(bytes32)\":{\"notice\":\"Returns the number of attestations for a given message.\"},\"nextMessageSequence()\":{\"notice\":\"Returns the next message sequence.\"},\"pause()\":{\"notice\":\"Pauses the manager.\"},\"quoteDeliveryPrice(uint16,bytes)\":{\"notice\":\"Fetch the delivery price for a given recipient chain transfer.\"},\"removeTransceiver(address)\":{\"notice\":\"Removes the transceiver for the given chain.\"},\"setInboundLimit(uint256,uint16)\":{\"notice\":\"Sets the inbound transfer limit for a given chain.\"},\"setOutboundLimit(uint256)\":{\"notice\":\"Sets the outbound transfer limit for a given chain.\"},\"setPeer(uint16,bytes32,uint8,uint256)\":{\"notice\":\"Sets the corresponding peer.\"},\"setThreshold(uint8)\":{\"notice\":\"Sets the threshold for the number of attestations required for a message to be considered valid.\"},\"setTransceiver(address)\":{\"notice\":\"Sets the transceiver for the given chain.\"},\"token()\":{\"notice\":\"Returns of the address of the token managed by this contract.\"},\"tokenDecimals()\":{\"notice\":\"Returns the number of decimals of the token managed by the NttManager.\"},\"transceiverAttestedToMessage(bytes32,uint8)\":{\"notice\":\"Returns a boolean indicating if the transceiver has attested to the message.\"},\"transfer(uint256,uint16,bytes32)\":{\"notice\":\"Transfer a given amount to a recipient on a given chain. This function is called         by the user to send the token cross-chain. This function will either lock or burn the         sender's tokens. Finally, this function will call into registered `Endpoint` contracts         to send a message with the incrementing sequence number and the token transfer payload.\"},\"transfer(uint256,uint16,bytes32,bytes32,bool,bytes)\":{\"notice\":\"Transfer a given amount to a recipient on a given chain. This function is called         by the user to send the token cross-chain. This function will either lock or burn the         sender's tokens. Finally, this function will call into registered `Endpoint` contracts         to send a message with the incrementing sequence number and the token transfer payload.\"},\"upgrade(address)\":{\"notice\":\"Upgrades to a new manager implementation.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/wormhole-ntt/src/interfaces/INttManager.sol\":\"INttManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pythnetwork/=node_modules/@pythnetwork/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":createx/=lib/pyth-crosschain/lazer/contracts/evm/lib/createx/src/\",\":ds-test/=lib/wormhole-solidity-sdk/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":hardhat/=node_modules/hardhat/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin-foundry-upgrades/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/src/\",\":pyth-crosschain/=lib/pyth-crosschain/\",\":solady/=node_modules/solady/\",\":solidity-stringutils/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\",\":wormhole-ntt/=lib/wormhole-ntt/src/\",\":wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"lib/wormhole-ntt/src/interfaces/IManagerBase.sol\":{\"keccak256\":\"0xcb50eb848fcb7fcf29645f33c742ca61f51c998ac3e8b9759f8d3241a9f58507\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://cc7dbd1618d1b66025c8c05648e32efd3d62275603f3634dbfc37ff93803cf69\",\"dweb:/ipfs/QmfQ62jRsptzX9yispA5rncg2N2wDwJa9dTxyvcBo5oPnq\"]},\"lib/wormhole-ntt/src/interfaces/INttManager.sol\":{\"keccak256\":\"0xe8162effffb098dbf3186b25ddbf0e09f39c0853057dfb7ea1108fe62684293a\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://8d833be24a06463ea4dff37535c3cb8c794182dfaadb2584fba33ce07947f1a0\",\"dweb:/ipfs/QmNo38JzP3hnyMxmfP8jevFm41hcmovKdoeTXtcbbYNE3R\"]},\"lib/wormhole-ntt/src/libraries/TransceiverStructs.sol\":{\"keccak256\":\"0x0ffc0a9db663128d0a2499935e7640cecd320a4b0864be72a0ba65aa2f7e2988\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://fd7908d674f92f8dbbaab7aa4ab3e45748e2109d25a862831ce702fb41e58a3c\",\"dweb:/ipfs/QmNfNfgJ8yXUZf1uNgk3mAEGXmWcQZNrWuGfmHfQ4v9k1K\"]},\"lib/wormhole-ntt/src/libraries/TrimmedAmount.sol\":{\"keccak256\":\"0x9375227d400261a9dd450dfda4c183fa7c239cdb39b9e31190905fc1b5490a7d\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://986c0f5507119a5679705cea7aa35ef7c4baa639faa233063139073255be1271\",\"dweb:/ipfs/QmcJ6fbKEWCL21XgmHrnfwYWrTRh3rfMfgpHWPsLzLzykW\"]},\"lib/wormhole-solidity-sdk/src/libraries/BytesParsing.sol\":{\"keccak256\":\"0xf617582be2d8f8a35fafb557631d9352640550720adfd7c9f7b9704145eb539a\",\"license\":\"Apache 2\",\"urls\":[\"bzz-raw://e46079c2a4bc6a0622511bae180cba7ace06364f05790165e948a9414c33aeb7\",\"dweb:/ipfs/QmVxAmZ2k1AZnbvFNLkbnsnqEsR4f5CPhE49j8Mxt1r6SJ\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.27+commit.40a35a09"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"burnAmount","type":"uint256"},{"internalType":"uint256","name":"balanceDiff","type":"uint256"}],"type":"error","name":"BurnAmountDifferentThanBalanceDiff"},{"inputs":[{"internalType":"address","name":"canceller","type":"address"},{"internalType":"address","name":"sender","type":"address"}],"type":"error","name":"CancellerNotSender"},{"inputs":[{"internalType":"uint256","name":"requiredPayment","type":"uint256"},{"internalType":"uint256","name":"providedPayment","type":"uint256"}],"type":"error","name":"DeliveryPaymentTooLow"},{"inputs":[{"internalType":"uint8","name":"mode","type":"uint8"}],"type":"error","name":"InvalidMode"},{"inputs":[{"internalType":"uint16","name":"chainId","type":"uint16"},{"internalType":"bytes32","name":"peerAddress","type":"bytes32"}],"type":"error","name":"InvalidPeer"},{"inputs":[],"type":"error","name":"InvalidPeerChainIdZero"},{"inputs":[],"type":"error","name":"InvalidPeerDecimals"},{"inputs":[],"type":"error","name":"InvalidPeerSameChainId"},{"inputs":[],"type":"error","name":"InvalidPeerZeroAddress"},{"inputs":[],"type":"error","name":"InvalidRecipient"},{"inputs":[],"type":"error","name":"InvalidRefundAddress"},{"inputs":[{"internalType":"uint16","name":"targetChain","type":"uint16"},{"internalType":"uint16","name":"thisChain","type":"uint16"}],"type":"error","name":"InvalidTargetChain"},{"inputs":[{"internalType":"bytes32","name":"msgHash","type":"bytes32"}],"type":"error","name":"MessageNotApproved"},{"inputs":[],"type":"error","name":"NoEnabledTransceivers"},{"inputs":[],"type":"error","name":"NotImplemented"},{"inputs":[{"internalType":"uint16","name":"chainId","type":"uint16"}],"type":"error","name":"PeerNotRegistered"},{"inputs":[{"internalType":"uint256","name":"refundAmount","type":"uint256"}],"type":"error","name":"RefundFailed"},{"inputs":[{"internalType":"uint256","name":"retrieved","type":"uint256"},{"internalType":"uint256","name":"registered","type":"uint256"}],"type":"error","name":"RetrievedIncorrectRegisteredTransceivers"},{"inputs":[],"type":"error","name":"StaticcallFailed"},{"inputs":[{"internalType":"uint256","name":"threshold","type":"uint256"},{"internalType":"uint256","name":"transceivers","type":"uint256"}],"type":"error","name":"ThresholdTooHigh"},{"inputs":[{"internalType":"bytes32","name":"nttManagerMessageHash","type":"bytes32"}],"type":"error","name":"TransceiverAlreadyAttestedToMessage"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"dust","type":"uint256"}],"type":"error","name":"TransferAmountHasDust"},{"inputs":[{"internalType":"address","name":"expectedOwner","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"UnexpectedDeployer"},{"inputs":[],"type":"error","name":"UnexpectedMsgValue"},{"inputs":[],"type":"error","name":"ZeroAmount"},{"inputs":[],"type":"error","name":"ZeroThreshold"},{"inputs":[{"internalType":"bytes32","name":"sourceNttManager","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"msgHash","type":"bytes32","indexed":true}],"type":"event","name":"MessageAlreadyExecuted","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32","indexed":false},{"internalType":"address","name":"transceiver","type":"address","indexed":false},{"internalType":"uint8","name":"index","type":"uint8","indexed":false}],"type":"event","name":"MessageAttestedTo","anonymous":false},{"inputs":[{"internalType":"uint256","name":"sequence","type":"uint256","indexed":false},{"internalType":"address","name":"recipient","type":"address","indexed":false},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"OutboundTransferCancelled","anonymous":false},{"inputs":[{"internalType":"uint16","name":"chainId_","type":"uint16","indexed":true},{"internalType":"bytes32","name":"oldPeerContract","type":"bytes32","indexed":false},{"internalType":"uint8","name":"oldPeerDecimals","type":"uint8","indexed":false},{"internalType":"bytes32","name":"peerContract","type":"bytes32","indexed":false},{"internalType":"uint8","name":"peerDecimals","type":"uint8","indexed":false}],"type":"event","name":"PeerUpdated","anonymous":false},{"inputs":[{"internalType":"uint8","name":"oldThreshold","type":"uint8","indexed":false},{"internalType":"uint8","name":"threshold","type":"uint8","indexed":false}],"type":"event","name":"ThresholdChanged","anonymous":false},{"inputs":[{"internalType":"address","name":"transceiver","type":"address","indexed":false},{"internalType":"uint256","name":"transceiversNum","type":"uint256","indexed":false},{"internalType":"uint8","name":"threshold","type":"uint8","indexed":false}],"type":"event","name":"TransceiverAdded","anonymous":false},{"inputs":[{"internalType":"address","name":"transceiver","type":"address","indexed":false},{"internalType":"uint8","name":"threshold","type":"uint8","indexed":false}],"type":"event","name":"TransceiverRemoved","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32","indexed":true}],"type":"event","name":"TransferRedeemed","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"recipient","type":"bytes32","indexed":true},{"internalType":"bytes32","name":"refundAddress","type":"bytes32","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"uint256","name":"fee","type":"uint256","indexed":false},{"internalType":"uint16","name":"recipientChain","type":"uint16","indexed":false},{"internalType":"uint64","name":"msgSequence","type":"uint64","indexed":false}],"type":"event","name":"TransferSent","anonymous":false},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32","indexed":true}],"type":"event","name":"TransferSent","anonymous":false},{"inputs":[{"internalType":"uint16","name":"sourceChainId","type":"uint16"},{"internalType":"bytes32","name":"sourceNttManagerAddress","type":"bytes32"},{"internalType":"struct TransceiverStructs.NttManagerMessage","name":"payload","type":"tuple","components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"bytes","name":"payload","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"attestationReceived"},{"inputs":[{"internalType":"uint64","name":"queueSequence","type":"uint64"}],"stateMutability":"nonpayable","type":"function","name":"cancelOutboundQueuedTransfer"},{"inputs":[],"stateMutability":"view","type":"function","name":"chainId","outputs":[{"internalType":"uint16","name":"","type":"uint16"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"completeInboundQueuedTransfer"},{"inputs":[{"internalType":"uint64","name":"queueSequence","type":"uint64"}],"stateMutability":"payable","type":"function","name":"completeOutboundQueuedTransfer","outputs":[{"internalType":"uint64","name":"msgSequence","type":"uint64"}]},{"inputs":[{"internalType":"uint16","name":"sourceChainId","type":"uint16"},{"internalType":"bytes32","name":"sourceNttManagerAddress","type":"bytes32"},{"internalType":"struct TransceiverStructs.NttManagerMessage","name":"message","type":"tuple","components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"bytes32","name":"sender","type":"bytes32"},{"internalType":"bytes","name":"payload","type":"bytes"}]}],"stateMutability":"nonpayable","type":"function","name":"executeMsg"},{"inputs":[],"stateMutability":"view","type":"function","name":"getMode","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"uint16","name":"chainId_","type":"uint16"}],"stateMutability":"view","type":"function","name":"getPeer","outputs":[{"internalType":"struct INttManager.NttManagerPeer","name":"","type":"tuple","components":[{"internalType":"bytes32","name":"peerAddress","type":"bytes32"},{"internalType":"uint8","name":"tokenDecimals","type":"uint8"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"getThreshold","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isMessageApproved","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"isMessageExecuted","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"}],"stateMutability":"view","type":"function","name":"messageAttestations","outputs":[{"internalType":"uint8","name":"count","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"nextMessageSequence","outputs":[{"internalType":"uint64","name":"","type":"uint64"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"pause"},{"inputs":[{"internalType":"uint16","name":"recipientChain","type":"uint16"},{"internalType":"bytes","name":"transceiverInstructions","type":"bytes"}],"stateMutability":"view","type":"function","name":"quoteDeliveryPrice","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"},{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"transceiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"removeTransceiver"},{"inputs":[{"internalType":"uint256","name":"limit","type":"uint256"},{"internalType":"uint16","name":"chainId","type":"uint16"}],"stateMutability":"nonpayable","type":"function","name":"setInboundLimit"},{"inputs":[{"internalType":"uint256","name":"limit","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setOutboundLimit"},{"inputs":[{"internalType":"uint16","name":"peerChainId","type":"uint16"},{"internalType":"bytes32","name":"peerContract","type":"bytes32"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"uint256","name":"inboundLimit","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"setPeer"},{"inputs":[{"internalType":"uint8","name":"threshold","type":"uint8"}],"stateMutability":"nonpayable","type":"function","name":"setThreshold"},{"inputs":[{"internalType":"address","name":"transceiver","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"setTransceiver"},{"inputs":[],"stateMutability":"view","type":"function","name":"token","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"tokenDecimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"bytes32","name":"digest","type":"bytes32"},{"internalType":"uint8","name":"index","type":"uint8"}],"stateMutability":"view","type":"function","name":"transceiverAttestedToMessage","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint16","name":"recipientChain","type":"uint16"},{"internalType":"bytes32","name":"recipient","type":"bytes32"}],"stateMutability":"payable","type":"function","name":"transfer","outputs":[{"internalType":"uint64","name":"msgId","type":"uint64"}]},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint16","name":"recipientChain","type":"uint16"},{"internalType":"bytes32","name":"recipient","type":"bytes32"},{"internalType":"bytes32","name":"refundAddress","type":"bytes32"},{"internalType":"bool","name":"shouldQueue","type":"bool"},{"internalType":"bytes","name":"encodedInstructions","type":"bytes"}],"stateMutability":"payable","type":"function","name":"transfer","outputs":[{"internalType":"uint64","name":"msgId","type":"uint64"}]},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"upgrade"}],"devdoc":{"kind":"dev","methods":{"attestationReceived(uint16,bytes32,(bytes32,bytes32,bytes))":{"details":"This function enforces attestation threshold and replay logic for messages. Once all      validations are complete, this function calls `executeMsg` to execute the command specified      by the message.","params":{"payload":"The VAA payload.","sourceChainId":"The Wormhole chain id of the sender.","sourceNttManagerAddress":"The address of the sender's NTT Manager contract."}},"cancelOutboundQueuedTransfer(uint64)":{"details":"This method is called by the client to cancel an outbound transfer that's been queued.","params":{"queueSequence":"The sequence of the message in the queue."}},"completeInboundQueuedTransfer(bytes32)":{"params":{"digest":"The digest of the message to complete."}},"completeOutboundQueuedTransfer(uint64)":{"details":"This method is called by the client to complete an outbound transfer that's been queued.","params":{"queueSequence":"The sequence of the message in the queue."},"returns":{"msgSequence":"The sequence of the message."}},"executeMsg(uint16,bytes32,(bytes32,bytes32,bytes))":{"details":"This function is exposed as a fallback for when an `Transceiver` is deregistered      when a message is in flight.","params":{"message":"The message to execute.","sourceChainId":"The Wormhole chain id of the sender.","sourceNttManagerAddress":"The address of the sender's nttManager contract."}},"getMode()":{"returns":{"_0":"mode A uint8 corresponding to the mode"}},"getPeer(uint16)":{"params":{"chainId_":"Wormhole chain ID."}},"isMessageApproved(bytes32)":{"params":{"digest":"The digest of the message."},"returns":{"_0":"- Boolean indicating if message has been approved."}},"isMessageExecuted(bytes32)":{"params":{"digest":"The digest of the message."},"returns":{"_0":"- Boolean indicating if message has been executed."}},"messageAttestations(bytes32)":{"params":{"digest":"The digest of the message."},"returns":{"count":"The number of attestations received for the given message digest"}},"quoteDeliveryPrice(uint16,bytes)":{"params":{"recipientChain":"The Wormhole chain ID of the transfer destination.","transceiverInstructions":"The transceiver specific instructions for quoting and sending"},"returns":{"_0":"- The delivery prices associated with each enabled endpoint and the total price."}},"removeTransceiver(address)":{"details":"This method can only be executed by the `owner`.","params":{"transceiver":"The address of the transceiver."}},"setInboundLimit(uint256,uint16)":{"details":"This method can only be executed by the `owner`.","params":{"chainId":"The Wormhole chain ID to set the limit for.","limit":"The new limit. This is formatted in the normal              token representation. e.g. a limit of 100 for a token with 6 decimals = 100_000_000"}},"setOutboundLimit(uint256)":{"details":"This method can only be executed by the `owner`.","params":{"limit":"The new outbound limit. This is formatted in the normal              token representation. e.g. a limit of 100 for a token with 6 decimals = 100_000_000"}},"setPeer(uint16,bytes32,uint8,uint256)":{"details":"The nttManager that executes the message sets the source nttManager as the peer.","params":{"decimals":"The number of decimals of the token on the peer chain.","inboundLimit":"The inbound rate limit for the peer chain id. This is formatted in the normal                     token representation. e.g. a limit of 100 for a token with 6 decimals = 100_000_000","peerChainId":"The Wormhole chain ID of the peer.","peerContract":"The address of the peer nttManager contract."}},"setThreshold(uint8)":{"details":"This method can only be executed by the `owner`.","params":{"threshold":"The new threshold (number of attestations)."}},"setTransceiver(address)":{"details":"This method can only be executed by the `owner`.","params":{"transceiver":"The address of the transceiver."}},"tokenDecimals()":{"returns":{"_0":"decimals The number of decimals of the token."}},"transceiverAttestedToMessage(bytes32,uint8)":{"params":{"digest":"The digest of the message.","index":"The index of the transceiver"},"returns":{"_0":"- Boolean indicating whether the transceiver at index `index` attested to a message digest"}},"transfer(uint256,uint16,bytes32)":{"params":{"amount":"The amount to transfer.","recipient":"The recipient address.","recipientChain":"The Wormhole chain ID for the destination."},"returns":{"msgId":"The resulting message ID of the transfer"}},"transfer(uint256,uint16,bytes32,bytes32,bool,bytes)":{"details":"Transfers are queued if the outbound limit is hit and must be completed by the client.","params":{"amount":"The amount to transfer.","encodedInstructions":"Additional instructions to be forwarded to the recipient chain.","recipient":"The recipient address.","recipientChain":"The Wormhole chain ID for the destination.","refundAddress":"The address to which a refund for unussed gas is issued on the recipient chain.","shouldQueue":"Whether the transfer should be queued if the outbound limit is hit."},"returns":{"msgId":"The resulting message ID of the transfer"}},"upgrade(address)":{"details":"This is upgraded via a proxy, and can only be executed by the `owner`.","params":{"newImplementation":"The address of the new implementation."}}},"version":1},"userdoc":{"kind":"user","methods":{"attestationReceived(uint16,bytes32,(bytes32,bytes32,bytes))":{"notice":"Called by an Endpoint contract to deliver a verified attestation."},"cancelOutboundQueuedTransfer(uint64)":{"notice":"Cancels an outbound transfer that's been queued."},"chainId()":{"notice":"Returns the chain ID."},"completeInboundQueuedTransfer(bytes32)":{"notice":"Complete an inbound queued transfer."},"completeOutboundQueuedTransfer(uint64)":{"notice":"Complete an outbound transfer that's been queued."},"executeMsg(uint16,bytes32,(bytes32,bytes32,bytes))":{"notice":"Called after a message has been sufficiently verified to execute         the command in the message. This function will decode the payload         as an NttManagerMessage to extract the sequence, msgType, and other parameters."},"getMode()":{"notice":"Returns the mode (locking or burning) of the NttManager."},"getPeer(uint16)":{"notice":"Returns registered peer contract for a given chain."},"getThreshold()":{"notice":"Returns the number of Transceivers that must attest to a msgId for it to be considered valid and acted upon."},"isMessageApproved(bytes32)":{"notice":"Checks if a message has been approved. The message should have at least the minimum threshold of attestations from distinct endpoints."},"isMessageExecuted(bytes32)":{"notice":"Checks if a message has been executed."},"messageAttestations(bytes32)":{"notice":"Returns the number of attestations for a given message."},"nextMessageSequence()":{"notice":"Returns the next message sequence."},"pause()":{"notice":"Pauses the manager."},"quoteDeliveryPrice(uint16,bytes)":{"notice":"Fetch the delivery price for a given recipient chain transfer."},"removeTransceiver(address)":{"notice":"Removes the transceiver for the given chain."},"setInboundLimit(uint256,uint16)":{"notice":"Sets the inbound transfer limit for a given chain."},"setOutboundLimit(uint256)":{"notice":"Sets the outbound transfer limit for a given chain."},"setPeer(uint16,bytes32,uint8,uint256)":{"notice":"Sets the corresponding peer."},"setThreshold(uint8)":{"notice":"Sets the threshold for the number of attestations required for a message to be considered valid."},"setTransceiver(address)":{"notice":"Sets the transceiver for the given chain."},"token()":{"notice":"Returns of the address of the token managed by this contract."},"tokenDecimals()":{"notice":"Returns the number of decimals of the token managed by the NttManager."},"transceiverAttestedToMessage(bytes32,uint8)":{"notice":"Returns a boolean indicating if the transceiver has attested to the message."},"transfer(uint256,uint16,bytes32)":{"notice":"Transfer a given amount to a recipient on a given chain. This function is called         by the user to send the token cross-chain. This function will either lock or burn the         sender's tokens. Finally, this function will call into registered `Endpoint` contracts         to send a message with the incrementing sequence number and the token transfer payload."},"transfer(uint256,uint16,bytes32,bytes32,bool,bytes)":{"notice":"Transfer a given amount to a recipient on a given chain. This function is called         by the user to send the token cross-chain. This function will either lock or burn the         sender's tokens. Finally, this function will call into registered `Endpoint` contracts         to send a message with the incrementing sequence number and the token transfer payload."},"upgrade(address)":{"notice":"Upgrades to a new manager implementation."}},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@eth-optimism/","@openzeppelin/=node_modules/@openzeppelin/","@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/","@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/","@pythnetwork/=node_modules/@pythnetwork/","@scroll-tech/=node_modules/@scroll-tech/","@thirdweb-dev/=node_modules/@thirdweb-dev/","createx/=lib/pyth-crosschain/lazer/contracts/evm/lib/createx/src/","ds-test/=lib/wormhole-solidity-sdk/lib/forge-std/lib/ds-test/src/","erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/","erc721a-upgradeable/=node_modules/erc721a-upgradeable/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/","hardhat/=node_modules/hardhat/","openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/","openzeppelin-contracts/=lib/openzeppelin-contracts/","openzeppelin-foundry-upgrades/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/src/","pyth-crosschain/=lib/pyth-crosschain/","solady/=node_modules/solady/","solidity-stringutils/=lib/pyth-crosschain/target_chains/ethereum/sdk/stylus/pyth-mock-solidity/lib/openzeppelin-foundry-upgrades/lib/solidity-stringutils/","sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/","wormhole-ntt/=lib/wormhole-ntt/src/","wormhole-solidity-sdk/=lib/wormhole-solidity-sdk/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"lib/wormhole-ntt/src/interfaces/INttManager.sol":"INttManager"},"evmVersion":"cancun","libraries":{}},"sources":{"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"],"license":"MIT"},"lib/wormhole-ntt/src/interfaces/IManagerBase.sol":{"keccak256":"0xcb50eb848fcb7fcf29645f33c742ca61f51c998ac3e8b9759f8d3241a9f58507","urls":["bzz-raw://cc7dbd1618d1b66025c8c05648e32efd3d62275603f3634dbfc37ff93803cf69","dweb:/ipfs/QmfQ62jRsptzX9yispA5rncg2N2wDwJa9dTxyvcBo5oPnq"],"license":"Apache 2"},"lib/wormhole-ntt/src/interfaces/INttManager.sol":{"keccak256":"0xe8162effffb098dbf3186b25ddbf0e09f39c0853057dfb7ea1108fe62684293a","urls":["bzz-raw://8d833be24a06463ea4dff37535c3cb8c794182dfaadb2584fba33ce07947f1a0","dweb:/ipfs/QmNo38JzP3hnyMxmfP8jevFm41hcmovKdoeTXtcbbYNE3R"],"license":"Apache 2"},"lib/wormhole-ntt/src/libraries/TransceiverStructs.sol":{"keccak256":"0x0ffc0a9db663128d0a2499935e7640cecd320a4b0864be72a0ba65aa2f7e2988","urls":["bzz-raw://fd7908d674f92f8dbbaab7aa4ab3e45748e2109d25a862831ce702fb41e58a3c","dweb:/ipfs/QmNfNfgJ8yXUZf1uNgk3mAEGXmWcQZNrWuGfmHfQ4v9k1K"],"license":"Apache 2"},"lib/wormhole-ntt/src/libraries/TrimmedAmount.sol":{"keccak256":"0x9375227d400261a9dd450dfda4c183fa7c239cdb39b9e31190905fc1b5490a7d","urls":["bzz-raw://986c0f5507119a5679705cea7aa35ef7c4baa639faa233063139073255be1271","dweb:/ipfs/QmcJ6fbKEWCL21XgmHrnfwYWrTRh3rfMfgpHWPsLzLzykW"],"license":"Apache 2"},"lib/wormhole-solidity-sdk/src/libraries/BytesParsing.sol":{"keccak256":"0xf617582be2d8f8a35fafb557631d9352640550720adfd7c9f7b9704145eb539a","urls":["bzz-raw://e46079c2a4bc6a0622511bae180cba7ace06364f05790165e948a9414c33aeb7","dweb:/ipfs/QmVxAmZ2k1AZnbvFNLkbnsnqEsR4f5CPhE49j8Mxt1r6SJ"],"license":"Apache 2"}},"version":1},"id":78}